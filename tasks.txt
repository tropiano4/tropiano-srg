--- Numerical/analytical work ---

* Look at \psi_d(r) in coordinate space connecting hard/soft potentials to decide on \lambda'
* Iterate on quasideuteron.ipynb
  - To-do
  - Move things to extras
* Use Weinberg eigenvalues to find matching \lambda between RKE potentials?

  ...

* Revisit Dickhoff chapter 7 ideas
  (evolving s.p. propagator, sum rules, connecting to occupation number operator)
  Write out relation between hole propagator, full s.p. propagator, spectral function,
  cross section, spectroscopic factor, self-energy, and HF approximation
* Contact Ragnar about collaborating
* Try implementing Moshinsky brackets to reduce \phi's (see Roth:2013fqa?)
* Multiply \phi_\alpha(p) by SF to test p-dependence
* Look at disentangling Ylm's using L to l1, l2 coupling from Glockle
* Add other nuclear s.p. wave functions to densities

  ...

* HF ground state with s.p. wave functions (SNMD calculation)
* How to do correlated ground state (references?)
* 3-D \lambda dependence plot (with q)
* How can 3-body terms be approximated (Bogner_2007qb)
* Approximations for electrodisintegration? Inclusion of FSIs?
* Fix Potentials Fortran and Perl codes (not finding BLAS)
  Error message is after running make -f make_generate_vsrg_vlowk
  "gfortran -o generate_vsrg_vlowk.x  ./src/nrtype.o ... ./src/generate_vsrg_vlowk.o -L/usr/local/opt/lapack/lib -llapack -lblas
ld: library not found for -lSystem"
* Implement Gezerlis local potential codes to Potentials/vsrg_macos
* Tidy-up potentials/vsrg_macos
* Test C++ with SRG flow equation
* Try solving for U(s) or \delta U(s) instead
* SRG inherit Potentials class? Generators inherit SRG class? (See FRIBTA scattering notebooks for examples)
* Implementing Loguru, snoop, and heart rate

Note: This also includes presentation-related work


--- Overleaf ---

* Address DF comments on Levinger references:
  - Check range of energies
  - Why is the cross section ratio effectively the ratio of squared wave functions?
* Address DF comments on GCF references:
  - Relation between A/d cross sections, contacts, and momentum distributions
  - Understand E1 and M1 transitions (reference 8 in Weiss_2014gua)
* Address other comments by DF...
* Update experimental L values after reading Terranova and Tavares papers
* Iterate on optical potentials paper
* Iterate on entire paper

  ...

* Derivation of spectroscopic factor (sf_notes.tex)
* Add results corresponding to derivation


--- Read ---

* SRG
  - Hergert_2016iju

* Quasideuteron
  - Levinger_1951vp, Levinger_1979jf, Levinger_2002vj
  - Terranova_1989aa
  - Tavares_1991zd
  - Chen_2004zx

* Spectroscopic factors and knockout reactions
  - Aumann_2020tcq
  - Li_2022zao
  - Yoshida_2021ckq
  - Nunes_2020bue
  - Rios_2009gb
  - Catford_2019icf
  - Jensen_2011mv
  - Timofeyuk_2010zz
  - Macfarlane_1960zz
  - Tostevin_2014usa
  - Wylie_2021uot

* IMSRG and/or shell model
  - Belley_2020ejd
  - Hergert_2020bxy

* Misc.
  - Negele_1981fkk
  - Holt_2022piv
  - Accounting for principal value in phase shift calculation
  - Lanczos and Davidson method
  - MasterThesis_Marc
  

--- Organization ---

* Incorporate PEP 8 style in codes
* New repository for thesis: tropiano-lent (something like that)
  - Move papers, presentations, old, and tasks.txt outside of repository
  - New README.md
  - Add data/potentials for matrix elements of V_NN in tropiano-LENT
  - Store thesis figures in figures/paper_1/main_section_1 ...
  - Generate figures with Jupyter notebooks for each section of thesis:
      srg.ipynb, magnus.ipynb, ..., quasideuteron.ipynb
    Will rely on direct scripts to compute results or interpolation from data files
  - Other Python scripts as inputs to notebooks:
      Functions to compute observables/operators
      Functions to compute a_2, L, etc.
      Functions for figure-oriented things
      Etc.
  - Data files (directory is called "data") - generated by scripts or copied from online
      potentials (kvnns, lambdas, etc.) - just the matrix elements and mesh
      momentum_distributions (pmd, snmd, dmd, EDFs, etc.)
      exp (experimental data)
      vmc (momentum distributions from VMC calculations)
  - Generate data with Python codes (scripts or notebooks?)
      run_srg, run_magnus, run_snmd, etc.
  - Sub-directories for specific scripts
      srg, momentum_distributions, etc.
  - Update SRG and Magnus codes: C++ with overhead Python script? Use inheritance?
      (stick to Python for now)
  - Update momentum distribution codes: C++ with overhead Python script? Use inheritance?
* Create potentials repository (sole purpose is to generate matrix elements)
  - For now this can be in tropiano-LENT
  - Ideally you save files into a specified location


--- Study ---

* Nuclear shell theory (de-Shalit and Talmi)
* Python (Punch and Enbody)
* Quantum mechanics (Shankar)
* Quantum field theory
* Renormalization (Collins)
* Statistical mechanics (Huang)
* Mathematical methods in the physical sciences (Boas)
* C++
* Quantum many-particle systems (Negele and Orland)
* The nucleon-nucleon interaction (Brown)
* Nuclear physics with effective field theory (Bedaque, Savage, Seki, and van Kolck)
* Elements of nuclei (Siemens and Jensen)
* Nuclear reactions for astrophysics (Thompson and Nunes)


--- Dissertation ---

* Detailed outline for SRG chapter
  - Read through references noting things you need to cover
  - Read through existing section and add what you need as comments
  - Think about reorganization and figures to add
* Write full SRG chapter

  ...

* Edit introduction outline and text
  - Any references I should read (after reading first two sections)?
  - Figure out where figures should go:
    1. Nuclear chart
    2. Nuclear degrees of freedom and scales
    3. V_NN(r) in 1S0 channel
    4. Chiral EFT diagrams
    5. V_{low-k} and SRG cartoons
    6. Nuclear chart/landscape on log scale
    7. Ground state energy of nucleus vs N_max
    8. Matrix dimension w.r.t. A and N_max
    9. IM-SRG figure showing decoupled reference state.
    Others?
* Read and take notes from Hergert_2020bxy and edit introduction (particularly many-body section)
  - Configuration space vs coordinate-space optimization of WF
  - Add MBPT (CI)
  - Edit NCSM, NCFC, and IT-NCSM
  - Add Self-consistent Green's function (SCGF) (CI)
  - Lattice EFT (Optimization)
  - Gather references
* Read review article (introduction and method) on QMC methods
  - Check if they require local potentials or if they "work best with local potentials"
* Read review article (introduction and method) on CC
* Read review article (introduction and method) on DFT
* Finish 1.5 Organization
* Magnus section

  ...

* Go through main.tex and understand every import
 